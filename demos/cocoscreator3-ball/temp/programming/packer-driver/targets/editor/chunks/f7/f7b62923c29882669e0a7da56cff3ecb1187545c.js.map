{"version":3,"sources":["file:///Users/yuanzimin/Downloads/cocos-example-ball-master/assets/script/game/game.ts"],"names":["_decorator","Component","instantiate","Prefab","Constants","Ball","BoardManager","CameraCtrl","UIManager","AudioManager","ccclass","property","Game","initFirstBoard","state","GAME_STATE","READY","score","hasRevive","_ball","ball","__preload","game","onLoad","ballPref","console","log","enabled","parent","node","getComponent","start","on","GAME_EVENT","RESTART","gameStart","REVIVE","gameRevive","onDestroy","off","resetGame","reset","cameraCtrl","boardManager","uiManager","showDialog","audioManager","playSound","PLAYING","gameDie","PAUSE","emit","DYING","gameOver","OVER","revive","scheduleOnce","addScore","ADDSCORE"],"mappings":"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","sourcesContent":["\n/**\n * Copyright (c) 2019 Xiamen Yaji Software Co.Ltd. All rights reserved.\n * Created by daisy on 2019/06/25.\n */\nimport { _decorator, Component, Node, instantiate, Prefab } from \"cc\";\nimport { Constants } from \"../data/constants\";\nimport { Ball } from \"./ball\";\nimport { BoardManager } from \"./board-manager\";\nimport { CameraCtrl } from \"./camera-ctrl\";\nimport { UIManager } from \"./ui-manager\";\nimport { AudioManager } from \"./audio-manager\";\nconst { ccclass, property } = _decorator;\n\n/**\n * @zh 游戏管理类，同时也是事件监听核心对象。\n */\n@ccclass(\"Game\")\nexport class Game extends Component {\n    @property(Prefab)\n    ballPref: Prefab = null!;\n    @property(BoardManager)\n    boardManager: BoardManager = null!;\n    @property(CameraCtrl)\n    cameraCtrl: CameraCtrl = null!;\n    @property(UIManager)\n    uiManager: UIManager = null!;\n    @property(AudioManager)\n    audioManager: AudioManager = null!;\n\n     // There is no diamond in first board\n    initFirstBoard = false;\n\n    get ball(){\n        return this._ball;\n    }\n\n    state = Constants.GAME_STATE.READY;\n    score = 0;\n    hasRevive = false;\n    _ball: Ball = null!;\n    __preload () {\n        Constants.game = this;\n    }\n\n    onLoad(){\n        if (!this.ballPref) {\n            console.log('There is no ball!!');\n            this.enabled = false;\n            return;\n        }\n\n        const ball = instantiate(this.ballPref) as Node;\n        // @ts-ignore\n        ball.parent = this.node.parent;\n        this._ball = ball.getComponent(Ball)!;\n    }\n\n    start(){\n        this.node.on(Constants.GAME_EVENT.RESTART, this.gameStart, this);\n        this.node.on(Constants.GAME_EVENT.REVIVE, this.gameRevive, this);\n    }\n\n    onDestroy() {\n        this.node.off(Constants.GAME_EVENT.RESTART, this.gameStart, this);\n        this.node.off(Constants.GAME_EVENT.REVIVE, this.gameRevive, this);\n    }\n\n    resetGame() {\n        this.state = Constants.GAME_STATE.READY;\n        this._ball.reset();\n        this.cameraCtrl.reset();\n        this.boardManager.reset();\n        this.uiManager.showDialog(true);\n    }\n\n    gameStart(){\n        this.audioManager.playSound();\n        this.uiManager.showDialog(false);\n        this.state = Constants.GAME_STATE.PLAYING;\n        this.hasRevive = false;\n        this.score = 0;\n    }\n\n    gameDie(){\n        this.audioManager.playSound(false);\n        this.state = Constants.GAME_STATE.PAUSE;\n\n        if (!this.hasRevive) {\n            this.node.emit(Constants.GAME_EVENT.DYING, ()=>{\n                this.gameOver();\n            });\n        } else {\n            this.gameOver();\n        }\n    }\n\n    gameOver() {\n        this.state = Constants.GAME_STATE.OVER;\n        this.audioManager.playSound(false);\n\n        this.resetGame();\n    }\n\n    gameRevive(){\n        this.hasRevive = true;\n        this.state = Constants.GAME_STATE.READY;\n        this.ball.revive();\n        this.scheduleOnce(() => {\n            this.audioManager.playSound();\n            this.state = Constants.GAME_STATE.PLAYING;\n        }, 1);\n    }\n\n    addScore(score: number){\n        this.score += score;\n        this.node.emit(Constants.GAME_EVENT.ADDSCORE, this.score);\n    }\n}\n"]}