{"version":3,"sources":["file:///Users/yuanzimin/Files/minigame-playable/demos/cocoscreator3-ball/assets/script/game/board-manager.ts"],"names":["_decorator","Component","Prefab","instantiate","Vec3","Constants","utils","ccclass","property","_tempPos","_diamondPos","BoardManager","diamondSprintList","diamondCenterX","_boardList","_boardInsIdx","start","initBoard","initDiamond","reset","game","initFirstBoard","pos","BOARD_INIT_POS","clone","board","type","BOARD_TYPE","NORMAL","i","BOARD_NUM","getNextPos","isActive","ball","currBoard","DIAMOND_NUM","active","node","boardPrefab","name","toString","addChild","getComponent","push","newBoard","newType","diffLevel","oldBoard","shift","SPRINT","x","setDiamond","count","out","set","position","o","getDiffCoeff","Math","random","SCENE_MAX_OFFSET_X","y","BOARD_GAP_SPRINT","SPRING","BOARD_GAP_SPRING","BOARD_GAP","diamondPrefab","BALL_JUMP_STEP_SPRINT","DIAMOND_START_FRAME","setNextDiamondPos","setPosition","newDiamond","clearDiamond","DIAMOND_SPRINT_STEP_Y","getBoardList","getDiamondSprintList"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2019 Xiamen Yaji Software Co.Ltd. All rights reserved.\n * Created by daisy on 2019/06/25.\n */\nimport { _decorator, Component, Node, Prefab, instantiate, Vec3 } from \"cc\";\nimport { Board } from \"./board\";\nimport { Constants } from \"../data/constants\";\nimport { utils } from \"../utils/utils\";\nconst { ccclass, property } = _decorator;\n\nconst _tempPos = new Vec3();\nconst _diamondPos = new Vec3();\n\n@ccclass(\"BoardManager\")\nexport class BoardManager extends Component {\n    @property(Prefab)\n    boardPrefab: Prefab = null!;\n    @property(Prefab)\n    diamondPrefab: Prefab = null!;\n\n    diamondSprintList: Node[] = []; // 钻石列表\n    diamondCenterX = 0; // 钻石摆放中心位置\n    _boardList: Board[] = []; // 跳板列表\n    _boardInsIdx = 0; // 当前实例编号\n\n    start () {\n        this.initBoard();\n        this.initDiamond();\n    }\n\n    // 每次开始游戏板重置\n    reset(){\n        this._boardInsIdx = 0;\n        Constants.game.initFirstBoard = false;\n        let pos = Constants.BOARD_INIT_POS.clone();\n        let board: Board;\n        const type = Constants.BOARD_TYPE.NORMAL;\n        for (let i = 0; i < Constants.BOARD_NUM; i++) {\n            board = this._boardList[i];\n            board.reset(type, pos, 1);\n            pos = this.getNextPos(board, 1);\n        }\n\n        board = this._boardList[0];\n        board.isActive = true;\n        Constants.game.ball.currBoard = board;\n\n        if (this.diamondSprintList[0]) {\n            for (var i = 0; i < Constants.DIAMOND_NUM; i++) {\n                this.diamondSprintList[i].active = false;\n            }\n        }\n    }\n\n    // 板初始化\n    initBoard() {\n        for (let i = 0; i < Constants.BOARD_NUM; i++) {\n            const node = instantiate(this.boardPrefab) as Node;\n            node.name = this._boardInsIdx.toString();\n            this._boardInsIdx++;\n            this.node.addChild(node);\n            const board = node.getComponent('Board') as Board;\n            this._boardList.push(board);\n        }\n        this.reset();\n    }\n\n    // 游戏过程中新增板\n    newBoard(newType: number, diffLevel: number) {\n        const oldBoard = this._boardList[Constants.BOARD_NUM - 1];\n        const pos = this.getNextPos(oldBoard, diffLevel, _tempPos);\n        const board = this._boardList.shift()!;\n        if (newType === Constants.BOARD_TYPE.SPRINT) {\n            this.diamondCenterX = pos.x;\n            this.setDiamond(pos);\n            board.reset(newType, pos, 0);\n        } else {\n            board.reset(newType, pos, diffLevel);\n        }\n\n        board.name = this._boardInsIdx.toString();\n        this._boardInsIdx++;\n        this._boardList.push(board);\n    }\n\n    // 获得新板位置\n    getNextPos(board: Board, count: number, out?: Vec3) {\n        const pos: Vec3 = out ? out.set(board.node.position) : board.node.position.clone();\n        const o = utils.getDiffCoeff(count, 1, 2);\n        pos.x = (Math.random() - .5) * Constants.SCENE_MAX_OFFSET_X * o;\n        if (board.type === Constants.BOARD_TYPE.SPRINT) {\n            pos.y += Constants.BOARD_GAP_SPRINT;\n            pos.x = board.node.position.x;\n        }\n\n        if (board.type === Constants.BOARD_TYPE.SPRING) {\n            pos.y += Constants.BOARD_GAP_SPRING;\n        } else {\n            pos.y += Constants.BOARD_GAP;\n        }\n        return pos;\n    }\n\n    initDiamond() {\n        for (let i = 0; i < Constants.DIAMOND_NUM; i++) {\n            this.diamondSprintList[i] = instantiate(this.diamondPrefab) as Node;\n            this.node.addChild(this.diamondSprintList[i]);\n            this.diamondSprintList[i].active = false;\n        }\n    }\n\n    setDiamond(pos: Vec3) {\n        const position = pos.clone();\n        position.y += Constants.BALL_JUMP_STEP_SPRINT * Constants.DIAMOND_START_FRAME;\n\n        for (let i = 0; i < Constants.DIAMOND_NUM; i++) {\n            this.setNextDiamondPos(position);\n            this.diamondSprintList[i].setPosition(position);\n            this.diamondSprintList[i].active = true;\n        }\n    }\n\n    newDiamond() {\n        _diamondPos.set(this.diamondSprintList[Constants.DIAMOND_NUM - 1].position);\n        this.setNextDiamondPos(_diamondPos);\n        const node = this.diamondSprintList.shift()!;\n        node.setPosition(_diamondPos);\n        node.active = true;\n        this.diamondSprintList.push(node);\n    }\n\n    clearDiamond() {\n        for (let i = 0; i < Constants.DIAMOND_NUM; i++) {\n            this.diamondSprintList[i].active = false;\n        }\n    }\n\n    setNextDiamondPos(pos: Vec3) {\n        pos.y += Constants.DIAMOND_SPRINT_STEP_Y;\n        pos.x += 1.5 * (Math.random() - 0.5);\n        if (pos.x > this.diamondCenterX + Constants.SCENE_MAX_OFFSET_X) {\n            pos.x = this.diamondCenterX + Constants.SCENE_MAX_OFFSET_X;\n        } else if (pos.x < this.diamondCenterX - Constants.SCENE_MAX_OFFSET_X) {\n            pos.x = this.diamondCenterX - Constants.SCENE_MAX_OFFSET_X;\n        }\n    }\n\n    getBoardList() {\n        return this._boardList;\n    }\n\n    getDiamondSprintList() {\n        return this.diamondSprintList;\n    }\n}\n"]}